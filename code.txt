//(A)
#include <stdio.h>
#include <time.h>
#include <stdlib.h>

int min = 1, max = 100;
void XuatMang(int* arr, int n){
    for(int i=0; i<n; i++){
        printf("%d ", arr[i]);
    }
}
void SinhMang(int* arr, int n){
    srand(time(NULL));
    for(int i=0; i<n; i++){
        arr[i] = rand()%(max-min+1) + min;
    }
    printf("Mang duoc sinh ra: ");
    XuatMang(arr, n);
}
void XuatMenu(int &select){
	printf("\n===MENU===\n");
    printf("1. Sinh mang\n");
    printf("2. Xuat mang\n");
    printf("3. Interchange Sort\n");
	printf("4. Selection Sort\n");
    printf("5. Insertion Sort\n");
    printf("6. Bubble Sort\n");
    printf("7. Quick Sort\n");
    printf("0. Thoat\n");
    printf("Select: ");
    scanf("%d", &select);
    
}
void swap(int &a, int &b){
	int temp = a;
	a = b;
	b = temp;
}

void InterchangeSort(int arr[], int n){
	for(int i=0; i<n-1; i++){
		for(int j=i+1; j<n; j++){
			if(arr[i] > arr[j]){
				swap(arr[i], arr[j]);
			}
		}
	}
}

void SelectionSort(int arr[], int n){
	for(int i=0; i<n-1; i++){
		int min = i;
		for(int j=i+1; j<n; j++){
			if(arr[j] < arr[min]){
				min = j;
			}
		}
		swap(arr[i], arr[min]);
	}
}

void InsertionSort(int arr[], int n){
	for(int i=1; i<n; i++){
		int pos = i - 1;
		int x = arr[i];
		while(pos>=0 && arr[pos]>x){
			arr[pos+1] = arr[pos];
			pos--;
		}
		arr[pos+1] = x;
	}
}

void BubbleSort(int arr[], int n){
	for(int i=0; i<n-1; i++){
		for(int j=n-1; j>i; j--){
			if(arr[j]<arr[j-1]){
				swap(arr[j], arr[j-1]);
			}
		}
	}
}

void QuickSort(int arr[], int left, int right){
	int x = arr[(left+right)/2];
	int i = left;
	int j = right;
	do{
		while(arr[i] < x) i++;
		while(arr[j] > x) j--;
		if(i<=j){
			swap(arr[i], arr[j]);
			i++;
			j--;
		}
	}while(i<j);
	if(left < j) QuickSort(arr, left, j);
	if(right > i) QuickSort(arr, i, right);
} 

int main(){
	printf("Nhap so phan tu: ");
    int n;
    scanf("%d", &n);
    int* arr = (int*)malloc(n*sizeof(int));
    if(arr == NULL){
        return 0;
    }
    int select;
    do{
        XuatMenu(select);
        switch(select){
            case 1:{
                SinhMang(arr, n);
                break;
            }
            case 2:{
                XuatMang(arr, n);
                break;
            }
            case 3:{
                InterchangeSort(arr, n);
                printf("Mang da duoc sap xep: ");
                XuatMang(arr, n);
                break;
            }
            case 4:{
                SelectionSort(arr, n);
                printf("Mang da duoc sap xep: ");
                XuatMang(arr, n);
                break;
            }
            case 5:{
                InsertionSort(arr, n);
                printf("Mang da duoc sap xep: ");
                XuatMang(arr, n);
            	break;
            }
            case 6:{
                BubbleSort(arr, n);
                printf("Mang da duoc sap xep: ");
                XuatMang(arr, n);
                break;
            }
            case 7:{
                QuickSort(arr, 0, n-1);
                printf("Mang da duoc sap xep: ");
                XuatMang(arr, n);
                break;
            }
            default:{
                select = 0;
                break;
            }
        }
    }while(select != 0);
    return 0;
}
//(B)
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef struct NhanVien{
    char code[20];
    char fullname[50];
    float salary;
}NV;

void NhapCT(NV* arr, int n){
    for(int i=0; i<n; i++){
		printf("Nhap thong tin nhan vien thu %d\n", i+1);
        printf("Ma nhan vien: ");
        scanf("%s", arr[i].code);
        getchar();
        printf("Ho va ten: ");
        fgets(arr[i].fullname, 50, stdin);
        if(arr[i].fullname[strlen(arr[i].fullname)-1]=='\n')
            arr[i].fullname[strlen(arr[i].fullname)-1]='\0';
       	printf("Tien luong: ");
        scanf("%f", &arr[i].salary);
    }
}

void XuatCT(NV* arr, int n){
    for(int i=0; i<n; i++){
        printf("Nhan vien (%d): %s - %s - %.2f$\n", i+1, arr[i].code, arr[i].fullname, arr[i].salary);
    }
}

void XuatMenu(int &select){
    printf("\n===MENU===\n");
    printf("1. Sap xep giam dan theo luong\n");
    printf("2. Sap xep tang dan theo ma nhan vien\n");
    printf("0. Thoat\n");
    printf("Select: ");
    scanf("%d", &select);
}

int Partition(NV* arr, int left, int right){
	int i = left - 1;
    float pivot = arr[right].salary;
    for(int j=left; j<right; j++){
		if(arr[j].salary > pivot){
			i++;
            NV temp = arr[i];
   			arr[i] = arr[j];
   			arr[j] = temp;
        }
    }
    i++;
    NV temp = arr[i];
    arr[i] = arr[right];
    arr[right] = temp;
    return i;
}

void Quick_Sort_Salary(NV* arr, int left, int right){
	if(left<right){
        int pos = Partition(arr, left, right);
		Quick_Sort_Salary(arr, left, pos-1);
        Quick_Sort_Salary(arr, pos+1, right);
    }
}

void Quick_Sort_Code(NV* arr, int left, int right){
	char x[20];
	strcpy(x, arr[(left+right)/2].code);
	int i = left;
    int j = right;
    do{
		while(strcmp(arr[i].code, x) < 0) i++;
        while(strcmp(arr[j].code, x) > 0) j--;
        if(i<=j){
            NV temp = arr[i];
    		arr[i] = arr[j];
    		arr[j] = temp;
            i++;
            j--;
        }
    }while(i<j);
    if(left < j) Quick_Sort_Code(arr, left, j);
    if(right > i) Quick_Sort_Code(arr, i, right);
}
int main(){
    printf("Nhap so luong nhan vien: ");
    int n;
    scanf("%d", &n);
    NV* arr = (NV*)malloc(n*sizeof(NV));
    if(arr == NULL){
        printf("Cap phat bo nho khong thanh cong !!!\n");
        return 0;
    }
    printf("\n===NHAP THONG TIN NHAN VIEN===\n");
    NhapCT(arr, n);
    printf("\n===THONG TIN CAC NHAN VIEN DUOC NHAP===\n");
    XuatCT(arr, n);
    int select;
    do{
        XuatMenu(select);
        switch(select){
            case 1:{
                Quick_Sort_Salary(arr, 0, n-1);
                printf("Nhan vien duoc sap xep giam dan theo luong\n");
                XuatCT(arr, n);
                break;
            }
            case 2:{
                Quick_Sort_Code(arr, 0, n-1);
                printf("Nhan vien duoc sap xep tang dan theo ma nhan vien\n");
                XuatCT(arr, n);
                break;
            }
            default:{
                select = 0;
                printf("Thoat chuong trinh !!!\n");
               	break;
            }
        }
    }while(select != 0);
    return 0;
}
